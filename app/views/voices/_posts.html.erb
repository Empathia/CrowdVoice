<%
    infosidebarIsPresent = false
    if !@blocks.empty?
      if params[:tags].present? || params['all'].present?
        infosidebarIsPresent = true
      end
    end
 %>
<script type="text/template" id="timeline-deactivated">
  <li class="timeliner disactivated-timeliner" data-year="{{year}}">
    <a href="#" class="cv-dynamic-text-color">
      <span class="timerliner-dot"></span>
      <span class="year-label">
      <span class="inner-dot-icn"></span>
      <span class="year-text">{{year}}</span>
      </span>
    </a>
  </li>
</script>
<div class="top-scroll" style="z-index:1;position:fixed;cursor:n-resize;width: 100%; height: 50px; right: 60px"></div>
<div class="bottom-scroll" style="z-index:1;position:fixed;cursor:s-resize;width: 100%; height: 50px; right: 60px"></div>
<div class="sweeper panel-padding">

  <!--style type="text/css" class="posts-style">
    /*placeholder for dynamically calculated posts styles*/
    /* used by mediafeed_init.js/setPostsmeasures()*/
  </style-->

  <!-- infographics sidebar render only on POSTS WALL view -->
  <% if  infosidebarIsPresent && !is_mobile? %>
    <%= render :partial => "voices/info-sidebar" %>
  <% end %>


  <div class="voices-scroller scroll-primary <%= 'with-infosidebar' if infosidebarIsPresent %>" style="height: 1167px; width: 959px;">
    <div class="voices-container initial-state" style="width: 800px; overflow: hidden; position: relative; height: 564px;">
      <div class="placeholders">
      <% 30.times do %>
        <img src="/images/voice-placeholder.gif" style="margin:5px;" />
      <% end %>
      </div>
    </div>
  </div>

  <div class="mediafeed-map-wrapper"
      data-lat="<%= @voice.latitude.present? ? @voice.latitude : '-34.397' %>"
      data-lng="<%= @voice.longitude.present? ? @voice.longitude : '150.644' %>">
  </div>

  <script type="text/javascript">
    $(document).ready(function(){

      CV.voicesContainer = new VoicesContainer({
        name     : 'voicesContainer',
        element  : $('.voices-container'),
        perPage  : <%= per_page = (is_mobile? ? Setting.posts_per_page_on_mobile : Setting.posts_per_page).to_i %>
      });

      CV.OverlaysController = new OverlaysController();

      var page = 0;

      var params = '?page=' + page;

      if ($.deparam.querystring().mod) {
          params += '&mod=1';
      }

      params += "&fetchAll=1"

      $.ajax({
        dataType  : "json",
        async     : true,
        url       : location.pathname + params,
        success   : function(data) {
          _.each(data.posts, function(item) {
            var post = {};

            post.id = item[0];
            post.voice_id = item[1];
            post.user_id = item[2];
            post.title = item[3];
            post.description = item[4];
            post.positive_votes_count = item[5];
            post.negative_votes_count = item[6];
            post.overall_score = item[7];
            post.source_url = item[8];
            post.source_type = item[9];
            post.source_service = item[10];
            post.image = item[11];
            post.approved = item[12];
            post.created_at = item[13];
            post.updated_at = item[14];
            post.copyright = item[15];
            post.image_width = item[16];
            post.image_height = item[17];
            post.active = false;
            post.tags = [];

            for (var i = 0; i < data.tags.length; i++) {
              var tag = data.tags[i];

              if (tag.id === post.id) {
                post.tags.push(tag.name);
              }
            };

            CV.voicesContainer.preloadedVoices.push(post);
          });

          CV.voicesContainer.page = page;

          CV.voicesContainer.createVoiceWidgets(function() {
            CV.voicesContainer.element.find('.placeholders').remove();

            CV.voicesContainer.filteredResults = CV.voicesContainer.children;

            CV.voicesContainer.enableNextPage(function(){
              CV.voicesContainer.element.isotope('layout');
              CV.timeline.update();
            });
          });

          
        }
      });

      CV.mediaFeedSearch = new MediaFeedSearch({
        element : $('.filters-and-mode')
      });
    });
  </script>